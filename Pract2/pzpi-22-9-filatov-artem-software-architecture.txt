МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ






ЗВІТ
з практичної роботи
з дисципліни «Архітектура програмного забезпечення»
на тему: «Steam»





Виконав:					        	Перевірив:
ст. гр. ПЗПІ-22-9                                        	Сокорчук Ігор Петрович
Філатов Артем Дмитрович




Харків 2025
1 ІСТОРІЯ ЗМІН

№
Дата
Версія звіту
Опис змін та виправлень
1
 25.04.2025
0.1
Створено розділи: «Завдання», «Опис виконаної роботи», «Висновки»; Додаток А, Додаток Б, Додаток В та зроблено презентацію і відеозапис.


2 ЗАВДАННЯ

Ознайомитись з історією створення та розвитку платформи Steam.
Дослідити архітектурні принципи побудови системи Steam.
Виявити ключові компоненти архітектури платформи Steam.
Проаналізувати застосовані архітектурні патерни та підходи.
Навести приклади технічних рішень та схеми архітектури системи.

3 ОПИС ВИКОНАНОЇ РОБОТИ

Steam є однією з найбільших цифрових платформ для розповсюдження комп'ютерних ігор та програмного забезпечення, розроблена компанією Valve Corporation. Платформа була запущена у 2003 році як інструмент для автоматичного оновлення власних ігор Valve, але згодом перетворилася на повноцінну екосистему цифрового контенту з мільйонами користувачів по всьому світу.
Архітектура Steam побудована на основі клієнт-серверної моделі з розподіленою системою доставки контенту (CDN). Основними компонентами архітектури є клієнтський додаток Steam Client, серверна інфраструктура Steam Backend, система управління контентом Steam Content Delivery Network, та інтегровані сервіси для соціальної взаємодії та багатокористувацької гри.
Steam Client являє собою складний настільний додаток, розроблений з використанням власного фреймворку Valve на базі Chromium Embedded Framework для веб-інтерфейсів та нативного коду C++ для системних операцій. Клієнт реалізує патерн Model-View-Controller для розділення бізнес-логіки, інтерфейсу користувача та обробки даних. Архітектура клієнта включає кілька ключових модулів: менеджер аутентифікації, система завантаження та встановлення ігор, інтерфейс магазину, соціальні функції та система оверлеїв для ігор.
Серверна частина Steam використовує мікросервісну архітектуру з горизонтальним масштабуванням. Основні сервіси включають службу аутентифікації користувачів, систему управління каталогом ігор, сервіс обробки платежів, систему соціальних функцій та службу збору телеметрії. Кожен сервіс працює незалежно та взаємодіє з іншими через API інтерфейси, що забезпечує високу надійність та можливість незалежного розгортання оновлень.
Система доставки контенту Steam CDN є критично важливим компонентом архітектури, який забезпечує швидке та надійне завантаження ігор користувачами по всьому світу. CDN включає географічно розподілені сервери контенту, систему балансування навантаження та інтелектуальну маршрутизацію трафіку. Використовується патерн Cache-Aside для оптимізації доставки часто запитуваного контенту.
Особливу увагу в архітектурі Steam приділено безпеці та захисту від піратства. Система включає власний DRM механізм Steam DRM, двофакторну аутентифікацію Steam Guard, та VAC (Valve Anti-Cheat) систему для боротьби з читерством в іграх. Ці компоненти інтегровані на всіх рівнях архітектури та взаємодіють для забезпечення комплексного захисту.
Steam Workshop представляє окрему підсистему для користувацького контенту, побудовану на принципах краудсорсингу та модульності. Архітектура Workshop включає систему завантаження та модерації контенту, інструменти для розробників, та API для інтеграції з іграми. Використовується патерн Publisher-Subscriber для сповіщення про оновлення контенту.
Соціальні функції Steam реалізовані через інтегровану платформу Steam Community, яка включає профілі користувачів, систему досягнень, форуми та групи. Архітектура соціальних функцій використовує event-driven підхід для обробки активності користувачів та патерн Observer для сповіщень.
Мобільний додаток Steam Mobile та веб-інтерфейс побудовані як окремі клієнти, які взаємодіють з тим самим backend через RESTful API. Це забезпечує консистентність даних та функціональності між різними платформами при мінімізації дублювання коду на серверній частині.



4 ВИСНОВКИ
У процесі дослідження архітектури платформи Steam було встановлено, що вона являє собою складну розподілену систему, побудовану на основі сучасних архітектурних принципів та патернів. Успіх платформи значною мірою обумовлений правильним вибором архітектурних рішень, які забезпечують масштабованість, надійність та продуктивність системи.
Основна цінність архітектури Steam полягає в її модульності та розширюваності. Мікросервісна архітектура backend компонентів дозволяє незалежно розвивати різні частини системи, а розподілена CDN забезпечує високу продуктивність доставки контенту незалежно від географічного розташування користувачів.
Важливо відзначити використання гібридного підходу в розробці клієнтських додатків, де критичні для продуктивності компоненти реалізовані нативно, а інтерфейс користувача використовує веб-технології. Це забезпечує баланс між швидкістю розробки та продуктивністю системи.
Архітектура Steam демонструє ефективне застосування різних архітектурних патернів: від класичних MVC та Observer до сучасних мікросервісів та event-driven архітектури. Інтеграція безпеки на всіх рівнях системи показує важливість комплексного підходу до захисту в сучасних цифрових платформах.
Платформа Steam є прикладом еволюції архітектури від простої клієнт-серверної системи до складної екосистеми цифрових сервісів, що підтверджує необхідність планування довгострокової архітектурної стратегії при розробці масштабних систем.



ДОДАТОК А
Посилання на відеозапис доповіді та текст хронологічного опису доповіді
 
Відеозапис доповіді на YouTube:
https://youtu.be/pFHdINfABjc
00:00 Що таке платформа Steam? Архітектура Steam представляє собою комплексну розподілену систему, побудовану на основі клієнт-серверної моделі з мікросервісною backend архітектурою, системою доставки контенту та інтегрованими соціальними сервісами, що забезпечує масштабовану та надійну платформу для розповсюдження цифрового контенту.


ДОДАТОК Б
Слайди презентації доповіді

Рисунок Б.1 – Титульний слайд та опис  


Рисунок Б.2 - Архітектурний огляд / Steam Client

Рисунок Б.3 - Backend Архітектура

Рисунок Б.4 - CDN, Система безпеки та Суспільство Steam

Рисунок Б.5 - Конкретні реалізації

Рисунок Б.6 - Тех.стек та висновок


ДОДАТОК В
Приклади програмного коду
Приклад архітектури Steam Client (концептуальна модель)
// Основний контролер Steam Client
class SteamClientController {
private:
    AuthenticationManager* authManager;
    GameLibraryManager* libraryManager;
    DownloadManager* downloadManager;
    SocialManager* socialManager;
    OverlayManager* overlayManager;
public:
    void initialize() {
        initializeComponents();
        establishServerConnection();
        authenticateUser();
        loadUserLibrary();
    }
    void handleUserAction(UserAction action) {
        switch(action.type) {
            case LAUNCH_GAME:
                libraryManager->launchGame(action.gameId);
                break;
            case DOWNLOAD_GAME:
                downloadManager->startDownload(action.gameId);
                break;
            case OPEN_STORE:
                showStoreInterface();
                break;
        }
    }
};
